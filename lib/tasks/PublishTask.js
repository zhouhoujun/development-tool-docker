"use strict";var __decorate=this&&this.__decorate||function(e,r,t,o){var n,i=arguments.length,s=i<3?r:null===o?o=Object.getOwnPropertyDescriptor(r,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,r,t,o);else for(var c=e.length-1;c>=0;c--)(n=e[c])&&(s=(i<3?n(s):i>3?n(r,t,s):n(r,t))||s);return i>3&&s&&Object.defineProperty(r,t,s),s};Object.defineProperty(exports,"__esModule",{value:!0});var _=require("lodash"),development_core_1=require("development-core"),replace=require("gulp-replace"),NodeDynamicTasks=function(){function e(){this.publishImages=[]}return e.prototype.getServiceInfo=function(e){if(!this._info){var r=e.option,t=e.toSrc(r.images);this._info={images:_.isArray(t)?t:[t],service:e.env.publish||e.toStr(r.service),user:e.env.user||e.toStr(r.user),psw:e.env.psw||e.toStr(r.psw)}}return this._info},e.prototype.tasks=function(){var e=this;return[{name:"build-docker",shell:function(e){var r="",t=e.toUrl(e.getRootPath()),o=e.option,n=e.toStr(o.buildcmd)||"docker-compose down & docker-compose build";return/^[C-Z]:/.test(t)&&(r=_.first(t.split(":"))+": & "),r+="cd "+t+" & "+n}},{name:"tag-docker",shell:function(r){var t=e.getServiceInfo(r),o="",n=r.option,i="";if(n.version)i=r.toStr(n.version);else{var s=r.getPackage();s&&(i=s.version)}return i=i||"latest",_.each(t.images,function(r){var n=t.service?t.service+"/"+r+":"+i:r+":"+i;e.publishImages.push(n),o+="docker tag "+r+" "+n+" & "}),o=o.substring(0,o.lastIndexOf("&"))}},{name:"push-docker",shell:function(r){var t=e.getServiceInfo(r);if(!t.service)return"";var o=r.option,n=r.toStr(o.pushcmd)||"docker push";return _.map(e.publishImages,function(e){return t.user?"docker login -u "+t.user+" -p "+t.psw+" "+t.service+" & "+n+" "+e:n+" "+e})}},{name:"export-docker-compose",pipes:function(r){var t=e.getServiceInfo(r),o=[function(e){return replace(/build:/gi,"# build:")},function(e){return replace(/#\s*image:/gi,"image:")}];return _.each(t.images,function(r,t){o.push(function(o){return replace(r,e.publishImages[t])})}),o}},{name:"save-docker-images",shell:function(r){var t=r.option,o=e.getServiceInfo(r),n=r.toStr(t.exportImagecmd)||"docker save",i=r.toUrl(r.getDist());return _.map(e.publishImages,function(e,r){return t.exportImage?" "+n+" "+e+" -o "+i+"/"+o.images[r]+".tar":""})}}]},e}();NodeDynamicTasks=__decorate([development_core_1.dynamicTask],NodeDynamicTasks),exports.NodeDynamicTasks=NodeDynamicTasks;
//# sourceMappingURL=../sourcemaps/tasks/PublishTask.js.map
